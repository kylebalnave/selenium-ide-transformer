<?xml version="1.0"?>
<rosetta>
    <glyph id="driver"><![CDATA[{{ driver.type }}]]></glyph>
    <glyph id="open"><![CDATA[
 //webdriver.open("{{ 0 }}");
 ]]></glyph>
    <glyph id="type"><![CDATA[
 //webdriver.focus("{{ 0 }}");
 //webdriver.type("{{ 1 }}");
 ]]></glyph>
    <glyph id="click"><![CDATA[
 //webdriver.focus("{{ 0 }}");
 //webdriver.click();
 ]]></glyph>
    <glyph id="clickAndWait"><![CDATA[
 //webdriver.focus("{{ 0 }}");
 //webdriver.click();
 //webdriver.waitFroPageLoad();
 ]]></glyph>
    <glyph id="jUnitTemplate"><![CDATA[
package generated;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

public class {{ 0 }} {

    @BeforeClass
    public static void setUpClass() {}

    @AfterClass
    public static void tearDownClass() {}

    @Before
    public void setUp() {}

    @After
    public void tearDown() {}
    
    @Test
    public void testSeleniumIDETest() {
        {{ 1 }}
		// Create a new instance of the Firefox driver
        // Notice that the remainder of the code relies on the interface, 
        // not the implementation.
        WebDriver driver = new FirefoxDriver();

        // And now use this to visit Google
        driver.get("http://www.google.com");
        // Alternatively the same thing can be done like this
        // driver.navigate().to("http://www.google.com");

        // Find the text input element by its name
        WebElement element = driver.findElement(By.name("q"));

        // Enter something to search for
        element.sendKeys("Cheese!");

        // Now submit the form. WebDriver will find the form for us from the element
        element.submit();

        // Check the title of the page
        System.out.println("Page title is: " + driver.getTitle());
        
        // Google's search is rendered dynamically with JavaScript.
        // Wait for the page to load, timeout after 10 seconds
        (new WebDriverWait(driver, 10)).until(new ExpectedCondition<Boolean>() {
            public Boolean apply(WebDriver d) {
                return d.getTitle().toLowerCase().startsWith("cheese!");
            }
        });

        // Should see: "cheese! - Google Search"
        System.out.println("Page title is: " + driver.getTitle());
        
        //Close the browser
        driver.quit();
    }
}
 ]]></glyph>
</rosetta>